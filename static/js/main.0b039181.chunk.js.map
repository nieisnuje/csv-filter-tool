{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["scientificToDecimal","num","test","parts","String","toLowerCase","split","e","pop","l","Math","abs","sign","coeff_array","length","slice","zero","Array","join","dec","file","onFinish","a","writer","encoder","TextEncoder","fileStream","streamSaver","createWriteStream","name","getWriter","papaparse","parse","step","result","data","includes","write","encode","res","map","complete","_results","_file","close","App","fileInput","useRef","useState","isProcessing","setIsProcessing","setFile","onChooseFileClick","useCallback","current","click","onFileChange","target","files","startProcessing","processFile","className","Container","Jumbotron","fluid","type","ref","accept","hidden","onChange","Button","outline","color","onClick","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b039181.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState, useCallback, useRef } from \"react\";\nimport { Jumbotron, Container, Button } from \"reactstrap\";\nimport papaparse from \"papaparse\";\nimport streamSaver from \"streamsaver\";\n\nfunction scientificToDecimal(num) {\n  if (/\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(num)) {\n    var zero = \"0\",\n      parts = String(num).toLowerCase().split(\"e\"),\n      e = parts.pop(),\n      l = Math.abs(e),\n      sign = e / l,\n      coeff_array = parts[0].split(\".\");\n    if (sign === -1) {\n      l = l - coeff_array[0].length;\n      if (l < 0) {\n        num =\n          coeff_array[0].slice(0, l) +\n          \".\" +\n          coeff_array[0].slice(l) +\n          (coeff_array.length === 2 ? coeff_array[1] : \"\");\n      } else {\n        num = zero + \".\" + new Array(l + 1).join(zero) + coeff_array.join(\"\");\n      }\n    } else {\n      var dec = coeff_array[1];\n      if (dec) l = l - dec.length;\n      if (l < 0) {\n        num = coeff_array[0] + dec.slice(0, l) + \".\" + dec.slice(l);\n      } else {\n        num = coeff_array.join(\"\") + new Array(l + 1).join(zero);\n      }\n    }\n  }\n  return String(num);\n}\n\nasync function processFile(file, onFinish) {\n  let writer = null;\n  const encoder = new TextEncoder();\n  let fileStream = streamSaver.createWriteStream(\n    `${file.name.split(\".\").slice(0, -1).join(\".\")}_Art_Tracks.csv`\n  );\n\n  writer = fileStream.getWriter();\n  papaparse.parse(file, {\n    step: function (result) {\n      if (result.data.includes(\"Custom ID\")) {\n        writer.write(encoder.encode(`${result.data}\\n`));\n      }\n      if (result.data.includes(\"Art Track\")) {\n        var res = result.data.map(function (num) {\n          return scientificToDecimal(num);\n        });\n        writer.write(encoder.encode(`${res}\\n`));\n      }\n    },\n    complete: function (_results, _file) {\n      writer.close();\n      onFinish();\n    },\n  });\n}\n\nfunction App() {\n  const fileInput = useRef();\n\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [file, setFile] = useState(null);\n\n  const onChooseFileClick = useCallback(() => {\n    fileInput.current.click();\n  }, []);\n\n  const onFileChange = useCallback(\n    (e) => {\n      setFile(e.target.files[0]);\n    },\n    [setFile]\n  );\n\n  const startProcessing = useCallback(() => {\n    setIsProcessing(true);\n    processFile(file, () => setIsProcessing(false));\n  }, [file]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Container className=\"mt-5\">\n          <Jumbotron fluid>\n            <Container fluid>\n              <h1 className=\"display-3\">CSV Filter</h1>\n              <p className=\"lead\">\n                This tool allows you to filter rows in huge CSV files. Upload\n                your file and the tool will automatically filter only{\" \"}\n                <b>Art Tracks</b>.\n              </p>\n              {!isProcessing && (\n                <div>\n                  <p className=\"lead\">\n                    <input\n                      type=\"file\"\n                      ref={fileInput}\n                      accept=\".csv\"\n                      hidden\n                      onChange={onFileChange}\n                    />\n                    <Button\n                      outline\n                      color=\"info\"\n                      className=\"btn\"\n                      onClick={onChooseFileClick}\n                    >\n                      Choose File\n                    </Button>\n                    {file?.name || \"No file\"}\n                  </p>\n                  <Button\n                    outline\n                    color=\"warning\"\n                    className=\"btn\"\n                    onClick={startProcessing}\n                    disabled={!file}\n                  >\n                    Process\n                  </Button>\n                </div>\n              )}\n              {isProcessing && (\n                <p className=\"lead\">\n                  Downloading... Please, don't close this tab.\n                </p>\n              )}\n            </Container>\n          </Jumbotron>\n        </Container>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}